cummax
sample.int(10)
throw_one <- function(n) {
samp <- sample.int(n)
pref_max <- cummax(samp)
indices <- pref_max == samp
sum((1:n)[indices])
}
throw_one(100)
throw_one(100)
throw_one(100)
throw_one(100)
throw_one(100)
throw_one(100)
throw_one(100)
throw_one(100)
throw_one(100)
throw_one(100)
throw_one(100)
throw_one(100)
throw_one(100)
throw_one(100)
throw_one(100)
throw_one(100)
throw_one(100)
throw_one(100)
?replicate
source('~/test_roma.R')
source('~/test_roma.R')
source('~/test_roma.R')
abs(-1) == 1
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
source('~/quad_weights_v2/quad_weights_primary.R')
traceback()
source('~/quad_weights_v2/quad_weights_primary.R')
system.time(source('~/quad_weights_v2/quad_weights_primary.R'))
system.time(source('~/quad_weights_v2/quad_weights_primary.R'))
system.time(source('~/quad_weights_v2/quad_weights_primary.R'))
biglog <- read.csv("~/DJ/new_logic_run/biglog.csv")
View(biglog)
biglog <- read.csv("~/DJ/new_logic_run/biglog.csv")
View(biglog)
biglog <- read.csv("~/DJ/new_logic_run/biglog.csv")
View(biglog)
biglog <- read.csv("~/DJ/new_logic_run/biglog.csv")
View(biglog)
source('~/NEG210515/0_main.R')
install.packages("snow")
source('~/NEG210515/0_main.R')
install.packages(c("Rssa", "fftw", "svd", "quadprog"))
library("devtools")
install_github("asl/rssa")
install_github("asl/SVD")
install_github("asl/svd")
install_github("asl/svd")
install_github("asl/svd")
install.packages("devtools")
library("devtools")
install_github("asl/svd")
install_github("asl/rssa")
install_github("asl/rssa")
source('~/NEG210515/0_main.R')
install.packages("snow")
source('~/NEG210515/0_main.R')
install.packages("fftw")
source('~/NEG210515/0_main.R')
source('~/NEG210515/0_weights.R')
install.packages("lpSolve")
source('~/NEG210515/0_weights.R')
source('~/NEG210515/3_2axis-cadzows_double.R')
?expand.grid
source('~/NEG210515/0_weights.R')
source('~/NEG210515/3_2axis-cadzows_double.R')
source('~/NEG210515/3_2axis-cadzows_double.R')
source('~/NEG210515/3_2axis-cadzows_double.R')
source('~/NEG210515/3_2axis-cadzows_double.R')
source('~/NEG210515/3_2axis-cadzows_double.R')
source('~/NEG210515/3_2axis-cadzows_double.R')
source('~/NEG210515/0_main.R')
source('~/NEG210515/0_weights.R')
source('~/lowrankapprox/weights-russki/weights_image.R')
source('~/lowrankapprox/weights-russki/weights_image.R')
source('~/lowrankapprox/weights-russki/weights_image.R')
source('~/lowrankapprox/weights-russki/weights_image.R')
rmse_quad
rmse_alpha
avg_it_quad
avg_it_alpha
source('~/arp-cadzow/0_weights.R')
source('~/arp-cadzow/1_cadzow.R')
source('~/arp-cadzow/3_aic_unemployment.R')
source('~/arp-cadzow/2_make_bic_picture.R')
source('~/arp-cadzow/3_aic_unemployment.R')
source('~/arp-cadzow/3_aic_unemployment.R')
source('~/arp-cadzow/3_aic_unemployment.R')
source('~/multiyear/solution.R')
source('~/multiyear/solution.R')
head(test)
?by
test <- by(as.data.frame(scoring), scoring$ID, correct_data)
test <- by(as.data.frame(scoring), scoring$ID, correct_data, simplify = TRUE)
?aggregate.data.frame
test <- aggregate(as.data.frame(scoring), scoring$ID, correct_data)
test <- aggregate(as.data.frame(scoring), ID, correct_data)
remove(test)
source('~/multiyear/solution.R')
source('~/multiyear/solution.R')
test
summary(test)
scoring_filled <- ddply(as.data.frame(scoring), .(ID), correct_data)
remove(test)
scoring_conv <- ddply(as.data.frame(scoring), .(ID), correct_data)
remove(scoring_filled)
table(scoring_conv$Class)
transit_data <- function(piece) {
N <- length(piece$Class)
data.frame(from = piece$Class[-N], to = piece$Class[-1])
}
scoring_transit <- ddply(as.data.frame(scoring_conv), .(ID), transit_data)
head(scoring_transit)
table(scoring_transit[, c("from", "to")])
transit_table <- table(scoring_transit[, c("from", "to")])
cohort <- transit_table / rowSums(transit_table)
cohort <- rbind(cohort, c(numeric(default_class - 1), N))
cohort <- rbind(cohort, c(numeric(default_class - 1), 1))
cohort
duration <- transit_table / table(scoring_conv$Class)
table(scoring_conv$Class)
duration <- rbind(transit_table, 0)
duration
duration <- transit_table / as.numeric(table(scoring_conv$Class))
duration
duration <- rbind(transit_table, 0)
duration <- duration / as.numeric(table(scoring_conv$Class))
duration
diag(duration) <- 0
duration
diag(duration) <- -rowSums(duration)
duration
library(expm)
install.packages("expm")
library(expm)
?expm
duration <- expm(duration)
duration
correct_data <- function(piece) {
#remove DUPs
piece <- piece[!duplicated(piece$YEAR_FINAS), ]
if (any(piece$DEFAULT_FINAS == 1)) {
index <- min(which(piece$DEFAULT_FINAS == 1))
piece <- piece[1:index, ]
piece$Class[index] <- default_class
}
N <- length(piece$Class)
piece$Weight <- N / (N - 1)
piece[, c("YEAR_FINAS", "Class", "Weight")]
}
scoring_conv <- ddply(as.data.frame(scoring), .(ID), correct_data)
correct_data <- function(piece) {
#remove DUPs
piece <- piece[!duplicated(piece$YEAR_FINAS), ]
if (any(piece$DEFAULT_FINAS == 1)) {
index <- min(which(piece$DEFAULT_FINAS == 1))
piece <- piece[1:index, ]
piece$Class[index] <- default_class
}
N <- length(piece$Class)
piece$Weight <- (N - 1) / N
piece[, c("YEAR_FINAS", "Class", "Weight")]
}
scoring_conv <- ddply(as.data.frame(scoring), .(ID), correct_data)
daply(scoring_conv, .(Class), function(x) sum(x$Weight))
table(scoring_conv$Class)
duration <- duration / as.numeric(daply(scoring_conv, .(Class), function(x) sum(x$Weight)))
diag(duration) <- 0
diag(duration) <- -rowSums(duration)
duration <- expm(duration)
duration
source('~/multiyear/solution.R')
duration
source('~/multiyear/solution.R')
source('~/multiyear/solution.R')
print(as.matrix(cohort))
attr(cohort)
print("cohort")
print(cohort)
print("duration")
print(duration)
a <- 5
remove(a)
source("ecruos_web.R")
setwd("~/ssa-with-r-siteexamples/examples")
source("ecruos_web.R")
library(lattice)
trellis.par.set("text", 12)
trellis.par.set("points", 5)
trellis.par.get("fontsize")
setwd("master")
setwd("code_ch1")
ecruos.and.extract("b_ssa_analysis.R", "../../sources_ch1")
ecruos.and.extract("b_ssa_analysis_sim.R", "../../sources_ch1")
ecruos.and.extract("b_ssa_analysis_sim_iossa.R", "../../sources_ch1") #time-comsuming
ecruos.and.extract("b_ssa_reallife.R", "../../sources_ch1")
ecruos.and.extract("b_ssa_forecast.R", "../../sources_ch1")
ecruos.and.extract("b_ssa_reallife_forecast.R", "../../sources_ch1")
ecruos.and.extract("b_ssa_reallife_bforecast.R", "../../sources_ch1") #time-consuming
setwd("../")
setwd("code_ch2d")
ecruos.and.extract("b_2dssa_plots.R", "../../sources_ch2d")
ecruos.and.extract("b_2dssa_typical.R", "../../sources_ch2d")
ecruos.and.extract("b_shssa_typical.R", "../../sources_ch2d")
ecruos.and.extract("b_2dssa_smoothing.R", "../../sources_ch2d")
ecruos.and.extract("b_rect_vs_shaped.R", "../../sources_ch2d")
ecruos.and.extract("b_ndssa.R", "../../sources_ch2d")
setwd("../")
setwd("code_chm")
ecruos.and.extract("b_cssa.R", "../../sources_chm")
ecruos.and.extract("b_mssa_decomp.R", "../../sources_chm")
ecruos.and.extract("b_mssa_comparison.R", "../../sources_chm")
setwd("../")
setwd("../")
